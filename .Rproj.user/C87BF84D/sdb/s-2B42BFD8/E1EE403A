{
    "collab_server" : "",
    "contents" : "##################################################################\n##                        Eli Strauss                           ##\n##                  Rank related fitness                        ##\n##                    January 5th, 2017                         ##\n##################################################################\nlibrary(lme4)\nlibrary(ggplot2)\nsource('~/Documents/Fisibase/ReadTidyAggs.R')\nranks <- ranks[ranks$Year != 1988,]\n\nranks$fitness2yo <- NA\nfor(row in 1:length(ranks[,1])){\n  if(ranks[row, 'Clan'] %in% c('north', 'south', 'hz') & ranks[row,'Year'] < 2010){next}\n  year <- ranks[row,'Year']\n  ranks[row,'fitness2yo'] <- length(filter(tblHyenas, Mom == ranks[row,'ID'] & (is.na(Disappeared) | Disappeared - Birthdate > 730) & format(Birthdate + 730, '%Y') == year)[,1])\n}\n\n\nranks$stan.rank.model <- ranks$stan.rank+1\nranks$is.alpha <- ifelse(ranks$Rank == 1, 1,0)\n\n- \n\nm1 <- lm(data = ranks, fitness2yo ~ Rank)\nm2 <- lm(data = ranks, fitness2yo ~ Rank + I(Rank^2))\nm3 <- lmer(data = ranks, fitness2yo ~ stan.rank.model + I(stan.rank.model^2) + is.alpha + (1|ID))\nm4 <- lmer(data = ranks, fitness2yo ~ stan.rank.model + is.alpha + (1|ID))\nm5 <- lmer(data = ranks, fitness2yo ~ stan.rank.model + (1|ID))\nm6 <- lm(data = ranks, fitness2yo ~ stan.rank.model + is.alpha)\n\np3 <- glmer(data = ranks, fitness2yo ~ stan.rank.model + I(stan.rank.model^2) + is.alpha + (1|ID), family = 'poisson')\np4 <- glmer(data = ranks, fitness2yo ~ stan.rank.model + is.alpha + (1|ID), family = 'poisson')\np5 <- glmer(data = ranks, fitness2yo ~ stan.rank.model + (1|ID), family = 'poisson')\np6 <- glm(data = ranks, fitness2yo ~ stan.rank.model + is.alpha, family = 'poisson')\n\n#####bin by stan rank for plotting\nnumbins <- 20\nbinedge <- c(seq(0,1.999999, length.out = numbins-1), 2)\nranks$rank.bin <- cut(ranks$stan.rank.model, binedge)\n\nfitRanksBin <- aggregate(x = ranks, by = list(ranks$rank.bin), FUN = mean, na.rm = T)[,c('Group.1', 'fitness2yo', 'stan.rank.model')]\nranks.ordered <- ranks[order(ranks$stan.rank.model),]  \n \n####Model with quadratic \nplot(fitRanksBin$stan.rank.model, fitRanksBin$fitness2yo, ylim = c(0,1), lwd = 3)\nlines(ranks.ordered$stan.rank.model, exp(fixef(p3)[1] + fixef(p3)[2]*ranks.ordered$stan.rank.model + fixef(p3)[3]*(ranks.ordered$stan.rank.model^2) + fixef(p3)[4]*ranks.ordered$is.alpha), lwd = 3)\n\n#####Model without quadratic\nplot(fitRanksBin$stan.rank.model, fitRanksBin$fitness2yo, ylim = c(0,1), lwd = 3)\nlines(ranks.ordered$stan.rank.model, exp(fixef(p4)[1] + fixef(p4)[2]*ranks.ordered$stan.rank.model + fixef(p4)[3]*ranks.ordered$is.alpha), lwd = 3)\n\n\n\nconfints <- confint.merMod(m3)[3:5,]\n\nfitdif <- function(start, end){\n  est <- exp(fixef(p4)[1] + fixef(p4)[2]*end + fixef(p4)[3]*(ifelse(end == 2, 1,0))) - exp(fixef(p4)[1] + fixef(p4)[2]*start + fixef(p4)[3]*(ifelse(start == 2, 1,0)))\n  #est <- (fixef(p5)[1] + fixef(p5)[2]*end) - (fixef(p5)[1] + fixef(p5)[2]*start)\n  #upbound <- (confints[1,1] + confints[2,1]*end + confints[3,1]*(end^2)) - (confints[1,1] + confints[2,1]*start + confints[3,1]*(start^2))\n  #lowbound <- (confints[1,2] + confints[2,2]*end + confints[3,2]*(end^2)) - (confints[1,2] + confints[2,2]*start + confints[3,2]*(start^2))\n  #return(c(est, upbound, lowbound))\n  return(est)\n}\n\nranks$Diff <- NA\nranks$Move <- \"None\"\nfor(row in 1:length(ranks[,1])){\n  if(ranks[row,'ID']==ranks[row,'IDold']){\n    start = end\n    next\n  }\n  end <- ranks[row,]$stan.rank.model\n  start <- ranks[ranks$IDold == ranks[row,'ID'] & ranks$Year == ranks[row,'Year'], 'stan.rank.model']\n  ranks[row,'Diff'] <- fitdif(start, end)\n  if(start < end){\n    ranks$Move <- \"Up\"\n  }else if(start > end){ranks$Move <- \"Down\"}\n}\nranks$WhichHalf <- ifelse(ranks$stan.rank < 1.1, 0, 1)\nranks$DiffBinary  <- ifelse(ranks$Diff > 0, 1, 0)\nggplot(data = ranks, aes(x = Diff, fill  = as.factor(WhichHalf))) +\n  geom_bar(position = 'dodge', binwidth = .1)\n\n##################################Testosterone#########################\nttt <- read.csv(\"~/Documents/Fisibase/testosterone.csv\")\nttt$hyenaID <- tolower(ttt$hyenaID)\nttt$poop_date <- as.Date(ttt$poop_date, format = '%d-%b-%y')\nttt$poop_year <- as.numeric(format(ttt$poop_date, '%Y'))\nttt$am.pm <- as.factor(ttt$am.pm)\nttt$ng.g <- as.numeric(ttt$ng.g)\nttt[ttt$poop_time == '','am.pm'] <- NA\n\nttt.am <- filter(ttt, am.pm == 'AM')\nttt.am.mean <- aggregate(ng.g ~ poop_year + hyenaID, data = ttt.am, mean)\n\nranks$fecalT <- left_join(x = ranks, y = ttt.am.mean, by = c(\"Year\" = \"poop_year\", \"ID\" = \"hyenaID\"))$ng.g\nboxplot(ranks$fecalT ~ ranks$DiffBinary)\n#######################################################################\n\n\n###################\n",
    "created" : 1484240271615.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1753646765",
    "id" : "E1EE403A",
    "lastKnownWriteTime" : 1484170258,
    "last_content_update" : 1484170258,
    "path" : "~/Documents/Research/socialmob/Rank related fitness.R",
    "project_path" : "Rank related fitness.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}